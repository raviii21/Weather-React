{"version":3,"sources":["components/Weather.jsx","App.js","index.js"],"names":["Weather","useState","query","setQuery","loading","data","error","weather","setWeather","search","event","a","key","preventDefault","process","axios","get","params","q","units","appid","then","res","console","log","catch","className","type","placeholder","name","value","onChange","target","onKeyPress","color","height","width","icon","faFrown","style","main","sys","country","currentDate","Date","getDay","getDate","getMonth","toDate","src","alt","description","Math","round","temp","toUpperCase","wind","speed","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUA6IeA,MAtIf,WAAoB,IAAD,EACSC,qBADT,mBACVC,EADU,KACHC,EADG,OAEaF,mBAAS,CACrCG,SAAS,EACTC,KAAM,GACNC,OAAO,IALQ,mBAEVC,EAFU,KAEDC,EAFC,KA0CXC,EAAM,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACK,UAAdD,EAAME,IADG,uBAEXF,EAAMG,iBACNV,EAAS,IACTK,EAAW,2BAAKD,GAAN,IAAeH,SAAS,KACtB,kDACEU,mCANH,SAQLC,IACHC,IAJS,kDAIA,CACRC,OAAQ,CACNC,EAAGhB,EACHiB,MAAO,SACPC,MAPQN,sCAUXO,MAAK,SAACC,GACLC,QAAQC,IAAI,MAAOF,GACnBd,EAAW,CAAEH,KAAMiB,EAAIjB,KAAMD,SAAS,EAAOE,OAAO,OAErDmB,OAAM,SAACnB,GACNE,EAAW,2BAAKD,GAAN,IAAeF,KAAM,GAAIC,OAAO,KAC1CH,EAAS,IACToB,QAAQC,IAAI,QAASlB,MAvBd,2CAAH,sDA4BZ,OACE,6BACE,wBAAIoB,UAAU,YAAd,WACU,+CAEV,yBAAKA,UAAU,cACb,2BACEC,KAAK,OACLD,UAAU,cACVE,YAAY,gBACZC,KAAK,QACLC,MAAO5B,EACP6B,SAAU,SAACrB,GAAD,OAAWP,EAASO,EAAMsB,OAAOF,QAC3CG,WAAYxB,KAIfF,EAAQH,SACP,oCACE,6BACA,6BACA,kBAAC,IAAD,CAAQuB,KAAK,OAAOO,MAAM,QAAQC,OAAQ,IAAKC,MAAO,OAGzD7B,EAAQD,OACP,oCACE,6BACA,6BACA,0BAAMoB,UAAU,iBACd,kBAAC,IAAD,CAAiBW,KAAMC,MACvB,0BAAMC,MAAO,CAAE,YAAa,SAA5B,4BAKLhC,GAAWA,EAAQF,MAAQE,EAAQF,KAAKmC,MACvC,6BACE,yBAAKd,UAAU,aACb,4BACGnB,EAAQF,KAAKwB,KADhB,KACuB,8BAAOtB,EAAQF,KAAKoC,IAAIC,WAGjD,yBAAKhB,UAAU,QACb,8BAzGK,WAIb,IAuBMiB,EAAc,IAAIC,KAIxB,MAHU,UAVG,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAGmBD,EAAYE,UAAvB,YAAoCF,EAAYG,UAAhD,YAxBK,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,YACA,YAaOH,EAAYI,aA4ENC,KAET,yBAAKtB,UAAU,aACb,yBACEA,UAAU,GACVuB,IAAG,4CAAuC1C,EAAQF,KAAKE,QAAQ,GAAG8B,KAA/D,WACHa,IAAK3C,EAAQF,KAAKE,QAAQ,GAAG4C,cAE9BC,KAAKC,MAAM9C,EAAQF,KAAKmC,KAAKc,MAC9B,yBAAK5B,UAAU,OAAf,UAEF,yBAAKA,UAAU,YACb,2BAAInB,EAAQF,KAAKE,QAAQ,GAAG4C,YAAYI,eACxC,0CAAgBhD,EAAQF,KAAKmD,KAAKC,MAAlC,WCzHGC,MARf,WACE,OACE,yBAAKhC,UAAU,OACb,kBAAC,EAAD,QCHNiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.73ba59df.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\n\nfunction Weather() {\n  const [query, setQuery] = useState();\n  const [weather, setWeather] = useState({\n    loading: false,\n    data: {},\n    error: false,\n  });\n\n  const toDate = () => {\n    // let date = new Date();\n    // const today = date.toDateString();\n    // return today;\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'Nocvember',\n      'December',\n    ];\n    const days = [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ];\n    const currentDate = new Date();\n    const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n      months[currentDate.getMonth()]\n    }`;\n    return date;\n  };\n\n  const search = async (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      setQuery('');\n      setWeather({ ...weather, loading: true });\n      const url = 'https://api.openweathermap.org/data/2.5/weather';\n      const appid = process.env.REACT_APP_API_KEY;\n      \n      await axios\n        .get(url, {\n          params: {\n            q: query,\n            units: 'metric',\n            appid: appid,\n          },\n        })\n        .then((res) => {\n          console.log('res', res);\n          setWeather({ data: res.data, loading: false, error: false });\n        })\n        .catch((error) => {\n          setWeather({ ...weather, data: {}, error: true });\n          setQuery('');\n          console.log('error', error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h1 className=\"app-name\">\n        Weather <span>ðŸŒ¤</span>\n      </h1>\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          className=\"city-search\"\n          placeholder=\"Search City..\"\n          name=\"query\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n          onKeyPress={search}\n        />\n      </div>\n\n      {weather.loading && (\n        <>\n          <br />\n          <br />\n          <Loader type=\"Oval\" color=\"black\" height={100} width={100} />\n        </>\n      )}\n      {weather.error && (\n        <>\n          <br />\n          <br />\n          <span className=\"error-message\">\n            <FontAwesomeIcon icon={faFrown} />\n            <span style={{ 'font-size': '20px' }}> Sorry, City not found</span>\n          </span>\n        </>\n      )}\n\n      {weather && weather.data && weather.data.main && (\n        <div>\n          <div className=\"city-name\">\n            <h2>\n              {weather.data.name}, <span>{weather.data.sys.country}</span>\n            </h2>\n          </div>\n          <div className=\"date\">\n            <span>{toDate()}</span>\n          </div>\n          <div className=\"icon-temp\">\n            <img\n              className=\"\"\n              src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\n              alt={weather.data.weather[0].description}\n            />\n            {Math.round(weather.data.main.temp)}\n            <sup className=\"deg\">&deg;C</sup>\n          </div>\n          <div className=\"des-wind\">\n            <p>{weather.data.weather[0].description.toUpperCase()}</p>\n            <p>Wind Speed: {weather.data.wind.speed}m/s</p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Weather;\n","import React from 'react';\nimport './App.css';\nimport Weather from './components/Weather';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Weather />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}